kube-state-metrics:
  extraArgs:
    - "--custom-resource-state-config-file=/etc/config/crd-config.yaml"
  volumeMounts:
    - mountPath: /etc/config
      name: config-volume
  volumes:
    - configMap:
        name: kube-state-metrics-crd-config
      name: config-volume
  rbac:
    create: true
    extraRules:
      - apiGroups: ["cluster.x-k8s.io"]
        resources: ["clusters", "machinedeployments", "machinesets", "machines", "machinehealthchecks", "machinepools"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["controlplane.cluster.x-k8s.io"]
        resources: ["kubeadmcontrolplanes"]
        verbs: ["get", "list", "watch"]
prometheus:
  prometheusSpec:
    enableAdminAPI: true
%{ if node_label_name != "" ~}
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: ${node_label_name}
              operator: In
              values:
              - ${node_label_value}
%{ endif ~}
%{ if node_toleration != "" ~}
    tolerations:
      - key: "${node_toleration}"
        operator: "Exists"
        effect: "NoSchedule"
%{ endif ~}
    additionalScrapeConfigs:
%{ if length(docker_hosts) > 0 ~}
      - job_name: docker-hosts
        static_configs: 
        - targets:
%{~ for host in docker_hosts }
            - "${host}:9100"
%{ endfor ~}
%{endif ~}
      - job_name: 'capi-providers'
        # 15s is a bit often for production but helps to get metrics quicker for development.
        scrape_interval: 15s
        metrics_path: /metrics
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_labelpresent_cluster_x_k8s_io_provider]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: metrics
          - source_labels: [__meta_kubernetes_pod_label_cluster_x_k8s_io_provider]
            action: replace
            target_label: provider
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
    remote_write:
      - url: https://aps-workspaces.${aws_managed_prometheus_region}.amazonaws.com/workspaces/${aws_managed_prometheus_workspace}/api/v1/remote_write
        queue_config:
          max_samples_per_send: 1000
          max_shards: 200
          capacity: 2500
        sigv4:
          region: ${aws_managed_prometheus_region}


# Don't enable alert manager
alertmanager:
  enabled: false

thanosRuler:
  enabled: false

# Disable scraping of things

coreDns:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

prometheusOperator:
  %{ if node_label_name != "" ~}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: ${node_label_name}
            operator: In
            values:
            - ${node_label_value}
  %{ endif ~}

  %{ if node_toleration != "" ~}
  tolerations:
    - key: "${node_toleration}"
      operator: "Exists"
      effect: "NoSchedule"
  %{ endif ~}